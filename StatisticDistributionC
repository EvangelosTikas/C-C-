/* In C...
Program that assigns randmoly marks in a range [0.0 - 10.0] 
and presentates the statistical distribution of it in a lesson.*/

#include <stdio.h>
#include <stdlib.h>

#define STUDENTS_SIZE 200
#define DISTRIBUTION_SIZE 10

double round(double var) {
 
    double value = (int)(var * 10.0 + 0.5);
    value = (double)value / 10.0; 
    return (value);
} 

int max(double array[], int size) {
	double max;
	int i;
	int index = 0;

	max = array[index];
	for(i = 0; i < size; i++) {
		if(array[i] == 10) {
			return(i);
		}
		if(array[i] > max) {
			max = array[i];
			index = i;
		}
	}
	return(index);
}

int main(int argc, char* argv[]) {
	int i, max_id, pos_index, participate;
	int grade_distr[DISTRIBUTION_SIZE];

	double grades[STUDENTS_SIZE];
	double random_mark;

	double sum = 0;

	int max_value_counter = 0;
	int appear = STUDENTS_SIZE * 0.6;
	int counter = 0;

	double studentsA = appear * 0.05;
	double studentsB = appear * 0.15;
	double studentsC = appear * 0.2;
	double studentsD = appear * 0.3;
	double studentsE = appear * 0.3;

	for(i = 0; i < DISTRIBUTION_SIZE; i++) {
		grade_distr[i] = 0;
	}

	srand(4239);
	for(i = 0; i < STUDENTS_SIZE; i++) {
		grades[i] = 10 * ((double)rand() / (double)(RAND_MAX));
		grades[i] = round(grades[i]);
		
	}

	for(i = 0; i < STUDENTS_SIZE; i++) {
		printf("%d = %.1lf ",i+4000,grades[i]);
		if(((i + 1) % 8 == 0) && (i != 0)) {
			printf("\n");
		}
		sum += grades[i];
	}
	putchar('\n');

	sum = sum / STUDENTS_SIZE;

	printf("--------------------------\n");
	printf("The average of %d students' mark is: %.1lf\n",STUDENTS_SIZE,sum);

	max_id = max(grades,STUDENTS_SIZE);

	printf("The max mark value belongs to student with AEM %d and this is: %.1lf\n",max_id + 4000,grades[max_id]);

	for(i = 0; i < STUDENTS_SIZE; i++) {
		pos_index = (int)grades[i];
		if(pos_index != DISTRIBUTION_SIZE)
			grade_distr[pos_index]++;
		else {
			max_value_counter++;
		}
	}

	printf("The distribution of the ranking is: \n");
	printf("--------------------------\n");

	for(i = 0; i < DISTRIBUTION_SIZE; i++) {
		printf("%d - %.1lf = %d\n",i,i + 0.9, grade_distr[i]);
		
		if(i == 9) {
			printf("%d = %d\n",i + 1, max_value_counter);	
		}
	}

	printf("\n############################# 2nd Part #############################\n");

	for(i = 0; i < STUDENTS_SIZE; i++) {
		grades[i] = -1;
	}

	for(i = 0; i < appear; i++) {
		do{
			participate = rand() % STUDENTS_SIZE;
		}while(grades[participate] != -1);

		if(studentsE >= 1) {
			random_mark = 2.9 * ((double)rand() / (double)(RAND_MAX));
			random_mark = round(random_mark);

			grades[participate] = random_mark;
			studentsE--;
		}
		else if(studentsD >= 1) {
			random_mark = 3 + 1.9 * ((double)rand() / (double)(RAND_MAX));
			random_mark = round(random_mark);

			grades[participate] = random_mark;
			studentsD--;
		}
		else if(studentsC >= 1) {
			random_mark = 5.0 + 1.4 * ((double)rand() / (double)(RAND_MAX));
			random_mark = round(random_mark);

			grades[participate] = random_mark;
			studentsC--;
		}
		else if(studentsB >= 1) {
			random_mark = 6.5 + 1.9 * ((double)rand() / (double)(RAND_MAX));
			random_mark = round(random_mark);

			grades[participate] = random_mark;
			studentsB--;
		}
		else if(studentsA >= 1) {
			random_mark = 8.5 + 1.5 * ((double)rand() / (double)(RAND_MAX));
			random_mark = round(random_mark);

			grades[participate] = random_mark;
			studentsA--;
		}
	}

	printf("\nThe following %d students take part in the exams: \n",appear);
	putchar('\n');
	
	sum = 0;

	for(i = 0; i < STUDENTS_SIZE; i++) {
		if(grades[i] != -1) {
			counter++;
			printf("%d = %.1lf ",i+4000,grades[i]);
			if((counter % 8 == 0)) {
				printf("\n");
			}
			sum += grades[i];
		}
	}
	putchar('\n');
	sum = sum / appear;

	printf("\nThe following %d students don't take part in the exams: \n",STUDENTS_SIZE - appear);
	putchar('\n');

	counter = 0;

	for(i = 0; i < STUDENTS_SIZE; i++) {
		if(grades[i] == -1) {
			counter++;
			printf("%d ",i+4000);
			if(counter % 17 == 0) {
				printf("\n");
			}
		}
	}
	putchar('\n');

	printf("--------------------------\n");
	printf("The average of %d students' mark is: %.1lf\n",appear,sum);

	max_id = max(grades,STUDENTS_SIZE);

	printf("The max mark value belongs to student with AEM %d and this is: %.1lf\n",max_id + 4000,grades[max_id]);

	for(i = 0; i < DISTRIBUTION_SIZE; i++) {
		grade_distr[i] = 0;
	}
	max_value_counter = 0;

	for(i = 0; i < STUDENTS_SIZE; i++) {
		if(grades[i] != -1) {

			if(grades[i] < 3.0) {
				grade_distr[0]++;
			}
			else if(grades[i] < 5.0) {
				grade_distr[1]++;	
			}
			else if(grades[i] < 6.5) {
				grade_distr[2]++;	
			}
			else if(grades[i] < 8.5) {
				grade_distr[3]++;	
			}
			else {
				grade_distr[4]++;	
			}
		}
	}

	printf("The distribution of the ranking is: \n");
	printf("--------------------------\n");

	for(i = DISTRIBUTION_SIZE/2 -1; i >= 0; i--) {
		if(i == 0) {
			printf("%.1lf - %.1lf = %d\n",(double)i,i + 2.9,grade_distr[i]);
		}
		if(i == 1) {
			printf("%.1lf - %.1lf = %d\n",(double)i+2,i + 3.9, grade_distr[i]);
		}
		else if(i == 2) {
			printf("%.1lf - %.1lf = %d\n",(double)i+3,i + 4.4,grade_distr[i]);
		}
		else if(i == 3) {
			printf("%.1lf - %.1lf = %d\n",i+3.5,i + 5.4,grade_distr[i]);
		}
		else if(i == 4) {
			printf("%.1lf - %.1lf = %d\n",i+4.5,i + 6.0,grade_distr[i]);
		}
	}

	return(0);
}
